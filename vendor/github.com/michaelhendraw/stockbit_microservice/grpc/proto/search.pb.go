// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

/*
Package stockbit is a generated protocol buffer package.

It is generated from these files:
	search.proto

It has these top-level messages:
	SearchRequest
	SearchResponse
	SearchResponseData
*/
package stockbit

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SearchRequest struct {
	SearchWord string `protobuf:"bytes,1,opt,name=SearchWord" json:"SearchWord,omitempty"`
	Pagination int64  `protobuf:"varint,2,opt,name=Pagination" json:"Pagination,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *SearchRequest) GetPagination() int64 {
	if m != nil {
		return m.Pagination
	}
	return 0
}

type SearchResponse struct {
	Search       []*SearchResponseData `protobuf:"bytes,1,rep,name=Search" json:"Search,omitempty"`
	TotalResults string                `protobuf:"bytes,2,opt,name=TotalResults" json:"TotalResults,omitempty"`
	Error        string                `protobuf:"bytes,3,opt,name=Error" json:"Error,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchResponse) GetSearch() []*SearchResponseData {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *SearchResponse) GetTotalResults() string {
	if m != nil {
		return m.TotalResults
	}
	return ""
}

func (m *SearchResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SearchResponseData struct {
	Title  string `protobuf:"bytes,1,opt,name=Title" json:"Title,omitempty"`
	Year   string `protobuf:"bytes,2,opt,name=Year" json:"Year,omitempty"`
	ImdbID string `protobuf:"bytes,3,opt,name=ImdbID" json:"ImdbID,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=Type" json:"Type,omitempty"`
	Poster string `protobuf:"bytes,5,opt,name=Poster" json:"Poster,omitempty"`
}

func (m *SearchResponseData) Reset()                    { *m = SearchResponseData{} }
func (m *SearchResponseData) String() string            { return proto.CompactTextString(m) }
func (*SearchResponseData) ProtoMessage()               {}
func (*SearchResponseData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SearchResponseData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchResponseData) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *SearchResponseData) GetImdbID() string {
	if m != nil {
		return m.ImdbID
	}
	return ""
}

func (m *SearchResponseData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SearchResponseData) GetPoster() string {
	if m != nil {
		return m.Poster
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "stockbit.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "stockbit.SearchResponse")
	proto.RegisterType((*SearchResponseData)(nil), "stockbit.SearchResponseData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Stockbit service

type StockbitClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type stockbitClient struct {
	cc *grpc.ClientConn
}

func NewStockbitClient(cc *grpc.ClientConn) StockbitClient {
	return &stockbitClient{cc}
}

func (c *stockbitClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/stockbit.Stockbit/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Stockbit service

type StockbitServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterStockbitServer(s *grpc.Server, srv StockbitServer) {
	s.RegisterService(&_Stockbit_serviceDesc, srv)
}

func _Stockbit_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockbitServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stockbit.Stockbit/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockbitServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stockbit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stockbit.Stockbit",
	HandlerType: (*StockbitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Stockbit_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}

func init() { proto.RegisterFile("search.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x31, 0x6d, 0xa3, 0xf6, 0x28, 0x0c, 0x27, 0x04, 0x16, 0x42, 0x28, 0xca, 0x94, 0x29,
	0x43, 0x61, 0x65, 0x2b, 0x43, 0x26, 0x2a, 0x37, 0x12, 0x62, 0x74, 0x5a, 0x0b, 0x22, 0x42, 0x1c,
	0xec, 0xeb, 0xc0, 0x86, 0xf8, 0xe4, 0xc8, 0x7f, 0x22, 0xb5, 0xaa, 0xd8, 0xfc, 0xde, 0xfd, 0xf4,
	0x4e, 0xf7, 0x0c, 0x73, 0xab, 0xa4, 0xd9, 0xbc, 0x17, 0xbd, 0xd1, 0xa4, 0x71, 0x6a, 0x49, 0x6f,
	0x3e, 0xea, 0x86, 0xb2, 0x67, 0x38, 0x5f, 0xfb, 0x89, 0x50, 0x5f, 0x3b, 0x65, 0x09, 0xef, 0x00,
	0x82, 0xf1, 0xa2, 0xcd, 0x96, 0xb3, 0x94, 0xe5, 0x33, 0xb1, 0xe7, 0xb8, 0xf9, 0x4a, 0xbe, 0x35,
	0x9d, 0xa4, 0x46, 0x77, 0xfc, 0x34, 0x65, 0xf9, 0x48, 0xec, 0x39, 0xd9, 0x0f, 0x83, 0x8b, 0x21,
	0xd1, 0xf6, 0xba, 0xb3, 0x0a, 0x1f, 0x20, 0x09, 0x0e, 0x67, 0xe9, 0x28, 0x3f, 0x5b, 0xdc, 0x16,
	0xc3, 0xfa, 0xe2, 0x90, 0x5c, 0x4a, 0x92, 0x22, 0xb2, 0x98, 0xc1, 0xbc, 0xd2, 0x24, 0x5b, 0xa1,
	0xec, 0xae, 0x25, 0xeb, 0x57, 0xcd, 0xc4, 0x81, 0x87, 0x97, 0x30, 0x79, 0x32, 0x46, 0x1b, 0x3e,
	0xf2, 0xc3, 0x20, 0xb2, 0x5f, 0x06, 0x78, 0x1c, 0xec, 0xe0, 0xaa, 0xa1, 0x56, 0xc5, 0xa3, 0x82,
	0x40, 0x84, 0xf1, 0xab, 0x92, 0x26, 0xc6, 0xfb, 0x37, 0x5e, 0x41, 0x52, 0x7e, 0x6e, 0xeb, 0x72,
	0x19, 0x73, 0xa3, 0x72, 0x6c, 0xf5, 0xdd, 0x2b, 0x3e, 0x0e, 0xac, 0x7b, 0x3b, 0x76, 0xa5, 0x2d,
	0x29, 0xc3, 0x27, 0x81, 0x0d, 0x6a, 0x51, 0xc2, 0x74, 0x1d, 0xaf, 0xc4, 0xc7, 0xa1, 0x00, 0xbc,
	0x3e, 0x3e, 0xdd, 0xd7, 0x7e, 0xc3, 0xff, 0xeb, 0x24, 0x3b, 0xa9, 0x13, 0xff, 0x69, 0xf7, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xc9, 0x8b, 0xad, 0xc4, 0x01, 0x00, 0x00,
}
